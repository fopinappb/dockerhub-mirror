name: mirror

on:
  workflow_dispatch:
    inputs:
      name:
        description: Full image name (tag included)
        required: true
      platforms:
        description: Platforms to include
        default: 'linux/amd64,linux/arm64,linux/arm/v7'

permissions:
  contents: read
  packages: write

run-name: mirror ${{ github.event.inputs.name }}

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Parse image name
        uses: actions/github-script@v7
        id: prepare
        with:
          script: |
            const script = require('./.github/parseImageName.js')
            return script({context})
      
      - name: Encode remote name
        id: prepare-remote
        run: |
          echo remote=$(echo ${{ fromJSON(steps.prepare.outputs.result).remote }} | tr '/' '-') >> $GITHUB_OUTPUT
          echo tag=$(echo ${{ fromJSON(steps.prepare.outputs.result).tag }}) >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: base
          build-args: |
            IMAGE=${{ github.event.inputs.name }}
          # FIXME: always use same package as "visibility" is always set to private on new images
          # and there is no REST API endpoint to do change it either.
          # very annoying to go change it via UI every time a new image was mirrored...
          # tags: |
          #  ghcr.io/fopinappb/dockerhub-mirror/alpine:3.19
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.prepare-remote.outputs.remote }}-${{ steps.prepare-remote.outputs.tag }}
          platforms: ${{ github.event.inputs.platforms }}

      - name: summary
        run: |
            echo "### ${{ steps.prepare-remote.outputs.remote }}" >> $GITHUB_STEP_SUMMARY
            echo '`${{ github.event.inputs.name }}` mirrored to `ghcr.io/${{ github.repository }}:${{ steps.prepare-remote.outputs.remote }}-${{ steps.prepare-remote.outputs.tag }}`' >> $GITHUB_STEP_SUMMARY
